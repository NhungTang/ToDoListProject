[{"D:\\Entrance-Test-Frontend\\todo\\src\\index.js":"1","D:\\Entrance-Test-Frontend\\todo\\src\\App.js":"2","D:\\Entrance-Test-Frontend\\todo\\src\\reportWebVitals.js":"3","D:\\Entrance-Test-Frontend\\todo\\src\\component\\NewTask\\newTask.js":"4","D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\todoList.js":"5","D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\itemList.js":"6","D:\\Entrance-Test-Frontend\\todo\\src\\component\\DatePiority\\datePiority.js":"7","D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\detailTask.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":776,"mtime":1607163932334,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2190,"mtime":1607177067622,"results":"13","hashOfConfig":"10"},{"size":2915,"mtime":1607182519899,"results":"14","hashOfConfig":"10"},{"size":2081,"mtime":1607178172260,"results":"15","hashOfConfig":"10"},{"size":2884,"mtime":1607166053965,"results":"16","hashOfConfig":"10"},{"size":2129,"mtime":1607178227041,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"d20kqt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"D:\\Entrance-Test-Frontend\\todo\\src\\index.js",[],["40","41"],"D:\\Entrance-Test-Frontend\\todo\\src\\App.js",["42"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NewTask from './component/NewTask/newTask.js'\nimport TodoList from './component/TodoList/todoList.js'\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,200;0,300;0,400;0,600;0,700;1,200;1,300;1,400;1,600&display=swap');\n</style>\n\nconst App = () => {\n  const [dataTasks, setDataTasks] = useState(JSON.parse(localStorage.getItem('DataTasks')));\n\n  const onClickAdd = (dataTasks) => {\n    if(dataTasks){\n      setDataTasks(dataTasks)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <NewTask onClickAdd={onClickAdd}/>\n        <TodoList dataTasks={dataTasks}/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\Entrance-Test-Frontend\\todo\\src\\reportWebVitals.js",[],"D:\\Entrance-Test-Frontend\\todo\\src\\component\\NewTask\\newTask.js",["43","44"],"import React, { useState, useEffect } from 'react';\r\nimport './newTask.css';\r\nimport DatePiority from '../DatePiority/datePiority'\r\n\r\nconst NewTask = (props) => {\r\n    const [dateNewTask, setDateNewTask] = useState(new Date());\r\n    const [piorityNewTask, setPiorityNewTask] = useState('normal');\r\n    const [dataTasks, setDataTasks] = useState([]); \r\n\r\n    useEffect(() => {\r\n      setDataTasks(JSON.parse(localStorage.getItem('DataTasks')))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n      localStorage.setItem('DataTasks', JSON.stringify(dataTasks))\r\n      document.querySelector('#add-new-task').value = ''\r\n      document.querySelector('#description-input').value = ''\r\n      props.onClickAdd(JSON.parse(localStorage.getItem('DataTasks')))\r\n\r\n    }, [dataTasks])\r\n\r\n    const onClickBtnAdd = () => {\r\n      const idItem = Date.parse(new Date())\r\n      setDataTasks(JSON.parse(localStorage.getItem('DataTasks')))\r\n      if(document.querySelector('#add-new-task').value != ''){\r\n        setDataTasks(prev => prev.concat({'title': document.querySelector('#add-new-task').value, \r\n        'description': document.querySelector('#description-input').value, 'piority': piorityNewTask, \r\n        'date': dateNewTask, 'id': idItem }))\r\n      }\r\n    }\r\n    \r\n    const onClickGetDate = (startDate) => {\r\n      setDateNewTask(startDate)\r\n    }\r\n    const onClickGetPiority = (id) => {\r\n      setPiorityNewTask(id)\r\n    }\r\n\r\n    return (\r\n      <div className=\"content-new-task\">\r\n        <p className=\"title\">New Task</p>\r\n        <div className=\"add-input\">\r\n            <input type=\"text\" placeholder=\"Add new task ...\" id=\"add-new-task\"/>\r\n        </div>\r\n        <div className=\"discription\">\r\n            <label for=\"description-input\" className=\"title-label\">Description</label>\r\n            <textarea type=\"text\" id=\"description-input\"/>\r\n        </div>\r\n        <DatePiority getDate={onClickGetDate} \r\n                      getPiority={onClickGetPiority} \r\n                      isDetail={false} />\r\n        <button className=\"btn-add\" onClick={onClickBtnAdd}>\r\n          <span className=\"text-btn\">Add</span>\r\n        </button>\r\n        \r\n      </div>\r\n    );\r\n}\r\nexport default NewTask;","D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\todoList.js",["45","46","47","48","49","50","51"],"D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\itemList.js",["52"],"import React, { useState } from 'react';\r\nimport './itemList.css';\r\nimport tick from '../../icon/tick.svg'\r\nimport DetailTask from './detailTask'\r\n\r\nconst ItemList = (props) => {\r\n    const [title, setTitle] = useState(props.task.title)\r\n    const [isShowDetail, setShowDetail] = useState(false)\r\n    const [isCheck, setCheck] = useState(false)\r\n\r\n    const onClickRemove = () => {\r\n        props.onClickRemove(props.task.id)\r\n    }\r\n    const onClickDetail = () => {\r\n        isShowDetail ? setShowDetail(false) : setShowDetail(true)\r\n    }\r\n    const onClickCheck = () => {\r\n        if(isCheck ){\r\n            setCheck(false)\r\n            props.onClickChoose(props.task.id, false)\r\n        }else{\r\n            setCheck(true)\r\n            props.onClickChoose(props.task.id, true)\r\n        } \r\n    }\r\n    const onClickUpdateSuccess = (title) => {\r\n        setTitle(title)\r\n    }\r\n    return (\r\n        <div className=\"container-item\">\r\n            <div className=\"content-item\">\r\n                <div className=\"left-content\">\r\n                    <div className=\"check\" onClick={onClickCheck}>\r\n                        <span className= {isCheck ? \"icon-tick\" : \"hide-tick\"}>\r\n                            <img className=\"icon\" src={tick}/>\r\n                        </span>\r\n                        <div className=\"check-box\"></div>\r\n                    </div>\r\n                    <span className=\"name-task\">{title}</span>\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <button className=\"btn-detail\" onClick={onClickDetail}>\r\n                        <span className=\"text-btn\">Detail</span>\r\n                    </button>\r\n                    <button className=\"btn-remove\" onClick={onClickRemove}>\r\n                        <span className=\"text-btn\">Remove</span>\r\n                    </button>\r\n                </div>\r\n                \r\n            </div>\r\n            <DetailTask task={props.task} isShowDetail={isShowDetail} onClickUpdateSuccess={onClickUpdateSuccess}/>\r\n        </div>\r\n      \r\n    );\r\n}\r\nexport default ItemList;","D:\\Entrance-Test-Frontend\\todo\\src\\component\\DatePiority\\datePiority.js",["53","54","55"],"import React, { useState } from 'react';\r\nimport './datePiority.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport iconDrop from '../../icon/drop-down-arrow.svg';\r\nimport iconCalendar from '../../icon/calendar-interface-symbol-tool.svg';\r\n\r\n\r\nconst DatePiority = (props) => {\r\n    const [startDate, setStartDate] = useState(props.isDetail ? new Date(props.task.date) : new Date());\r\n    const [piority, setPiority] = useState(props.isDetail ? props.task.piority : 'Normal');\r\n    const onChangeDate = (date) => {\r\n        setStartDate(date)\r\n        props.getDate(date);\r\n    }\r\n    if(props.isDetail && props.task.date){\r\n        const date = new Date(props.task.date)\r\n        // setStartDate(date)\r\n        // console.log(new Date(props.task.date))\r\n    }\r\n    \r\n    const onClickPiority = (event) =>{\r\n        if( event.nativeEvent.path[0].id){\r\n            props.getPiority( event.nativeEvent.path[0].id)\r\n            setPiority(event.nativeEvent.path[0].id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"date-piority\">\r\n            <div className=\"date\">\r\n                <label className=\"title-label\">Due Date</label>\r\n                <div className=\"date-icon\">\r\n                    <DatePicker selected={startDate} \r\n                            onChange={onChangeDate}/>\r\n                    {/* <input type=\"date\"/> */}\r\n                    <span className=\"box-icon\">\r\n                        <img className=\"icon-calendar\" src={iconCalendar}/>\r\n                    </span>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"piority\">\r\n                <label className=\"title-label\">Piority</label>\r\n                <div className=\"dropdown-piority\">\r\n                    <div className=\"piority-icon\">\r\n                        <div className=\"choose\">\r\n                            <p className=\"text-choose\">{piority}\r\n                            <span className=\"icon-piority\">\r\n                                <img className=\"icon-dropdown\" src={iconDrop}></img>\r\n                            </span>\r\n                            </p>\r\n                            \r\n                        </div>\r\n                        <div className=\"list-piority\">\r\n                            <ul className=\"content-piority\">\r\n                                <li className=\"item-piority\" id=\"low\" onClick={onClickPiority}>Low</li>\r\n                                <li className=\"item-piority\" id=\"normal\" onClick={onClickPiority}>Normal</li>\r\n                                <li className=\"item-piority\" id=\"high\" onClick={onClickPiority}>High</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DatePiority;","D:\\Entrance-Test-Frontend\\todo\\src\\component\\TodoList\\detailTask.js",["56","57"],"import React, { useState, useEffect } from 'react';\r\nimport './detailTask.css';\r\nimport DatePiority from '../DatePiority/datePiority'\r\n\r\nconst DetailTask = (props) => {\r\n  const [dateTask, setDateTask] = useState(new Date());\r\n  const [piorityTask, setPiorityTask] = useState('normal');\r\n  const [dataTasks, setDataTasks] = useState([]); \r\n  const [title, setTitle] = useState(props.task.title)\r\n  const [description, setDescription] = useState(props.task.description)\r\n\r\n  const onClickGetDate = (startDate) => {\r\n    setDateTask(startDate)\r\n  }\r\n  const onClickGetPiority = (id) => {\r\n    setPiorityTask(id)\r\n  }\r\n  useEffect(() => {\r\n    localStorage.setItem('DataTasks', JSON.stringify(dataTasks))\r\n  }, [dataTasks])\r\n\r\n  const onClickUpdate = () => {\r\n    const idItem = props.task.id\r\n    setDataTasks(JSON.parse(localStorage.getItem('DataTasks')))\r\n    setDataTasks(prev => prev.filter(x =>  props.task.id != x.id ))\r\n    setDataTasks(prev => prev.concat({'title': title, \r\n    'description': description, 'piority': piorityTask, \r\n    'date': dateTask, 'id': idItem }))\r\n    props.onClickUpdateSuccess(title)\r\n    alert('update success')\r\n  }\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n  const handleChangeDescription = (e) => {\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={props.isShowDetail ? \"content-detail\" : \"hideDetail\"}>\r\n      <input className=\"title-task\" type=\"text\" value={title} id=\"title-detail\" onChange={handleChange}></input>\r\n      <div className=\"discription\">\r\n          <label for=\"description-input\" className=\"title-label\"  >Description</label>\r\n          <textarea type=\"text\" id=\"description-detail\" type=\"text\" value={description} onChange={handleChangeDescription}/>\r\n      </div>\r\n      <DatePiority task={props.task} \r\n                    isDetail={true} \r\n                    getDate={onClickGetDate} \r\n                    getPiority={onClickGetPiority}/>\r\n      <button className=\"btn-update\" onClick={onClickUpdate}>\r\n        <span className=\"text-btn\">Update</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default DetailTask;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":20,"column":8,"nodeType":"68","endLine":20,"endColumn":19,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":25,"column":56,"nodeType":"72","messageId":"73","endLine":25,"endColumn":58},{"ruleId":"70","severity":1,"message":"71","line":24,"column":46,"nodeType":"72","messageId":"73","endLine":24,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":33,"column":46,"nodeType":"72","messageId":"73","endLine":33,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":37,"column":21,"nodeType":"76","messageId":"77","endLine":37,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":39,"column":48,"nodeType":"72","messageId":"73","endLine":39,"endColumn":50},{"ruleId":"70","severity":1,"message":"71","line":47,"column":47,"nodeType":"72","messageId":"73","endLine":47,"endColumn":49},{"ruleId":"70","severity":1,"message":"71","line":65,"column":49,"nodeType":"72","messageId":"73","endLine":65,"endColumn":51},{"ruleId":"70","severity":1,"message":"71","line":72,"column":57,"nodeType":"72","messageId":"73","endLine":72,"endColumn":59},{"ruleId":"78","severity":1,"message":"79","line":35,"column":29,"nodeType":"80","endLine":35,"endColumn":63},{"ruleId":"62","severity":1,"message":"81","line":17,"column":15,"nodeType":"64","messageId":"65","endLine":17,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":38,"column":25,"nodeType":"80","endLine":38,"endColumn":76},{"ruleId":"78","severity":1,"message":"79","line":50,"column":33,"nodeType":"80","endLine":50,"endColumn":79},{"ruleId":"70","severity":1,"message":"71","line":25,"column":58,"nodeType":"72","messageId":"73","endLine":25,"endColumn":60},{"ruleId":"82","severity":1,"message":"83","line":44,"column":57,"nodeType":"84","endLine":44,"endColumn":68},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["87"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'date' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [dataTasks, props]",{"range":"90","text":"91"},[754,765],"[dataTasks, props]"]